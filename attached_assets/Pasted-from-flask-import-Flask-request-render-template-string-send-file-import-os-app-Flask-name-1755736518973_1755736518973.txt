from flask import Flask, request, render_template_string, send_file
import os

app = Flask(__name__)
UPLOAD_FOLDER = "uploads"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

# Lista que acumula as linhas v치lidas
all_lines = []

# HTML da interface
html_form = """
<!doctype html>
<html>
<head>
    <title>Uploader de TXT</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f8f9fa; }
        h2 { color: #222; }
        input[type=file] { margin-bottom: 10px; }
        .msg { margin: 10px 0; color: green; font-weight: bold; }
        a { text-decoration: none; color: #007bff; }
    </style>
</head>
<body>
    <h2>Enviar arquivos .txt</h2>
    <form method="post" enctype="multipart/form-data">
        <input type="file" name="file" accept=".txt" required>
        <br><br>
        <input type="submit" value="Upload">
    </form>
    <br>
    <a href="/download">游닌 Baixar arquivo final</a>
</body>
</html>
"""

def linha_valida(linha: str) -> bool:
    """Verifica se a linha segue o padr칚o parte1:parte2:parte3"""
    partes = linha.split(":")
    return len(partes) == 3 and all(partes)

@app.route("/", methods=["GET", "POST"])
def upload_file():
    global all_lines
    if request.method == "POST":
        file = request.files["file"]
        if file and file.filename.endswith(".txt"):
            # l칡 o conte칰do do arquivo
            content = file.read().decode("utf-8", errors="ignore").splitlines()
            # filtra linhas v치lidas
            filtradas = [linha.strip() for linha in content if linha_valida(linha.strip())]
            # adiciona ao acumulador
            all_lines.extend(filtradas)
            return f"<p class='msg'>{len(filtradas)} linhas v치lidas adicionadas de {file.filename}!</p><a href='/'>Voltar</a>"
        else:
            return "<p>丘멆잺 Envie apenas arquivos .txt</p><a href='/'>Voltar</a>"
    return render_template_string(html_form)

@app.route("/download")
def download():
    # salva o arquivo final com todas as linhas v치lidas
    caminho_saida = os.path.join(UPLOAD_FOLDER, "resultado_final.txt")
    with open(caminho_saida, "w", encoding="utf-8") as f:
        f.write("\n".join(all_lines))
    return send_file(caminho_saida, as_attachment=True)

if __name__ == "__main__":
    # Roda no navegador local
    app.run(host="0.0.0.0", port=5000, debug=True)
